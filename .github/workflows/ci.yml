name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1

jobs:
  ci-everything:
    name: All CI stages
    runs-on: ubuntu-latest
    needs:
      - lint
      - rust-tests
      - python-tests
    steps:
      - run: exit 0

  python-tests:
    name: Python tests and maturin build
    runs-on: ubuntu-latest
    needs:
      - rust-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            trustfall_core/target/
            pytrustfall/target/
            experiments/schemaless/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: pytrustfall/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd pytrustfall
          poetry install --no-interaction --no-root

      - name: maturin build and test
        run: |
          cd pytrustfall
          source .venv/bin/activate
          maturin develop
          pytest
          maturin build --interpreter python -o target/wheels/

      - id: branch-info
        run: |
          echo "::set-output name=COMMIT::$(git rev-parse HEAD)"
          echo "::set-output name=BRANCH_NAME::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=TAG_NAME::$(.github/workflows/get_prerelease_name.sh)"
          echo "::set-output name=PYTHON_BINDINGS_CHANGED::$(.github/workflows/python_bindings_changed.sh)"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: steps.branch-info.outputs.PYTHON_BINDINGS_CHANGED != 0
        with:
          name: pytrustfall-wheels
          path: pytrustfall/target/wheels/
          retention-days: 1

      - name: Make a new prerelease
        uses: ncipollo/release-action@v1
        if: steps.branch-info.outputs.BRANCH_NAME == 'main' && steps.branch-info.outputs.PYTHON_BINDINGS_CHANGED != 0
        with:
          artifacts: "pytrustfall/target/wheels/*.whl,pytrustfall/target/wheels/*.tar.gz"
          commit: ${{ steps.branch-info.outputs.COMMIT }}
          tag: ${{ steps.branch-info.outputs.TAG_NAME }}
          generateReleaseNotes: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Check lint and rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            trustfall_core/target/
            pytrustfall/target/
            experiments/schemaless/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  rust-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            trustfall_core/target/
            pytrustfall/target/
            experiments/schemaless/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo test
        run: cargo test
