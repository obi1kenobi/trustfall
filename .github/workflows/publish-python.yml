name: Publish Python bindings

on:
  workflow_call:
    secrets:
      PYPI_TOKEN:
        required: true

concurrency:
  group: publish-python

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: publish python trustfall
    runs-on: ubuntu-latest
    needs:
      - should-publish
      - macos
      - windows
      - linux
      # - musllinux
    if: needs.should-publish.outputs.is_new_version == 'yes' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          set -euxo pipefail
          pip install --upgrade twine
          twine upload --skip-existing *
      - uses: actions/checkout@v3
        with:
          persist-credentials: true
      - name: Tag the version
        run: |
          set -euxo pipefail
          export CURRENT_VERSION="$(.github/workflows/get_current_crate_version.sh trustfall)"
          git tag "pytrustfall-v$CURRENT_VERSION"
          git push origin "pytrustfall-v$CURRENT_VERSION"

  macos:
    runs-on: macos-latest
    needs:
      - should-publish
    if: needs.should-publish.outputs.is_new_version == 'yes'
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Show python version
        run: |
          python --version
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --interpreter python --out dist --sdist -m pytrustfall/Cargo.toml
      - name: Install built wheel - x86_64
        run: |
          pip install trustfall --no-index --find-links dist --force-reinstall
          python -c "import trustfall"
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --interpreter python --universal2 --out dist -m pytrustfall/Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install trustfall --no-index --find-links dist --force-reinstall
          python -c "import trustfall"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    needs:
      - should-publish
    if: needs.should-publish.outputs.is_new_version == 'yes'
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Show python version
        run: |
          python --version
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: x64
          args: --release --interpreter python --out dist -m pytrustfall/Cargo.toml
      - name: Install built wheel
        run: |
          pip install trustfall --no-index --find-links dist --force-reinstall
          python -c "import trustfall"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    needs:
      - should-publish
    if: needs.should-publish.outputs.is_new_version == 'yes'
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Show python version
        run: |
          python3 --version
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          manylinux: auto
          args: --release --interpreter python${{ matrix.python-version}} --out dist -m pytrustfall/Cargo.toml
      - name: Install built wheel
        run: |
          pip install trustfall --no-index --find-links dist --force-reinstall
          python -c "import trustfall"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  # musllinux:
  #   runs-on: ubuntu-latest
    # needs:
    #   - should-publish
    # if: needs.should-publish.outputs.is_new_version == 'yes'
  #   strategy:
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11"]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         architecture: x64
  #     - name: Show python version
  #       run: |
  #         python3 --version
  #     - name: Build wheels
  #       uses: messense/maturin-action@v1
  #       with:
  #         target: x86_64-unknown-linux-musl
  #         manylinux: musllinux_1_2
  #         args: --release --interpreter python${{ matrix.python-version}} --out /io/dist -m pytrustfall/Cargo.toml
  #     - name: Install built wheel
  #       uses: addnab/docker-run-action@v3
  #       with:
  #         image: alpine:latest
  #         options: -v ${{ github.workspace }}:/io -w /io
  #         run: |
  #           apk add py3-pip
  #           pip3 install -U pip
  #           ls -alh /io/dist/
  #           pip3 install trustfall --no-index --find-links /io/dist/ --force-reinstall
  #           python3 -c "import trustfall"
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: /io/dist

  should-publish:
    name: Did version change
    runs-on: ubuntu-latest
    outputs:
      is_new_version: "${{ steps.check.outputs.is_new_version }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: Swatinem/rust-cache@v2

      - id: check
        run: |
          set +e
          .github/workflows/is_py_package_version_already_uploaded.sh pytrustfall trustfall
          export EXIT_CODE="$?"
          set -e
          if [[ "$EXIT_CODE" == "7" ]]; then
            echo 'is_new_version=no' >> $GITHUB_OUTPUT
          elif [[ "$EXIT_CODE" == "0" ]]; then
            echo 'is_new_version=yes' >> $GITHUB_OUTPUT
          else
            # Unexpected outcome, indicates a bug.
            exit "$EXIT_CODE"
          fi
