name: Publish Rust crate

on:
  workflow_call:
    secrets:
      MATURIN_PYPI_TOKEN:
        required: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: publish python trustfall
    runs-on: ubuntu-latest
    needs:
      - should-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            trustfall_core/target/
            trustfall_wasm/target/
            pytrustfall/target/
            experiments/schemaless/target/
            experiments/schemaless_wasm/target/
            experiments/trustfall_rustdoc/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: "${{ secrets.MATURIN_PYPI_TOKEN }}"
        with:
          maturin-version: latest
          command: publish
          args: --release -m pytrustfall/Cargo.toml --repository-url test.pypi.org

  should-publish:
    name: Did version change
    runs-on: ubuntu-latest
    outputs:
      is_new_version: "${{ steps.check.outputs.is_new_version }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - id: check
        run: |
          set +e
          .github/workflows/is_py_package_version_already_uploaded.sh trustfall
          export EXIT_CODE="$?"
          set -e
          if [[ "$EXIT_CODE" == "7" ]]; then
            echo '::set-output name=is_new_version::no'
          elif [[ "$EXIT_CODE" == "0" ]]; then
            echo '::set-output name=is_new_version::yes'
          else
            # Unexpected outcome, indicates a bug.
            exit "$EXIT_CODE"
          fi
