Ok(TestIRQuery(
  schema_name: "numbers",
  ir_query: IRQuery(
    root_name: "Number",
    root_parameters: Some(EdgeParameters({
      "max": Int64(3),
      "min": Int64(1),
    })),
    root_component: IRQueryComponent(
      root: Vid(1),
      vertices: {
        Vid(1): IRVertex(
          vid: Vid(1),
          type_name: "Number",
        ),
        Vid(2): IRVertex(
          vid: Vid(2),
          type_name: "Composite",
        ),
        Vid(3): IRVertex(
          vid: Vid(3),
          type_name: "Prime",
          filters: [
            Equals(LocalField(
              field_name: "value",
              field_type: "Int",
            ), Variable(VariableRef(
              variable_name: "prime",
              variable_type: "Int",
            ))),
          ],
        ),
        Vid(4): IRVertex(
          vid: Vid(4),
          type_name: "Number",
        ),
        Vid(5): IRVertex(
          vid: Vid(5),
          type_name: "Number",
        ),
        Vid(6): IRVertex(
          vid: Vid(6),
          type_name: "Number",
        ),
        Vid(7): IRVertex(
          vid: Vid(7),
          type_name: "Number",
          filters: [
            LessThan(LocalField(
              field_name: "value",
              field_type: "Int",
            ), Tag(ContextField(ContextField(
              vertex_id: Vid(6),
              field_name: "value",
              field_type: "Int",
            )))),
          ],
        ),
      },
      edges: {
        Eid(1): IREdge(
          eid: Eid(1),
          from_vid: Vid(1),
          to_vid: Vid(2),
          edge_name: "multiple",
          parameters: Some(EdgeParameters({
            "max": Int64(3),
          })),
        ),
        Eid(2): IREdge(
          eid: Eid(2),
          from_vid: Vid(2),
          to_vid: Vid(3),
          edge_name: "primeFactor",
        ),
        Eid(3): IREdge(
          eid: Eid(3),
          from_vid: Vid(3),
          to_vid: Vid(4),
          edge_name: "predecessor",
        ),
        Eid(4): IREdge(
          eid: Eid(4),
          from_vid: Vid(4),
          to_vid: Vid(5),
          edge_name: "predecessor",
        ),
        Eid(5): IREdge(
          eid: Eid(5),
          from_vid: Vid(5),
          to_vid: Vid(6),
          edge_name: "predecessor",
          optional: true,
        ),
        Eid(6): IREdge(
          eid: Eid(6),
          from_vid: Vid(1),
          to_vid: Vid(7),
          edge_name: "successor",
        ),
      },
      outputs: {
        "mult": ContextField(
          vertex_id: Vid(2),
          field_name: "value",
          field_type: "Int",
        ),
        "start": ContextField(
          vertex_id: Vid(1),
          field_name: "value",
          field_type: "Int",
        ),
        "succ": ContextField(
          vertex_id: Vid(7),
          field_name: "value",
          field_type: "Int",
        ),
      },
    ),
    variables: {
      "prime": "Int",
    },
  ),
  arguments: {
    "prime": Int64(2),
  },
))
