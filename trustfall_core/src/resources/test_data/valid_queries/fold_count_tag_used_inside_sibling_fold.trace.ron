TestInterpreterOutputTrace(
  schema_name: "numbers",
  trace: Trace(
    ops: {
      Opid(1): TraceOp(
        opid: Opid(1),
        parent_opid: None,
        content: Call(GetStartingTokens(Vid(1))),
      ),
      Opid(2): TraceOp(
        opid: Opid(2),
        parent_opid: None,
        content: Call(ProjectNeighbors(Vid(1), "Prime", Eid(1))),
      ),
      Opid(3): TraceOp(
        opid: Opid(3),
        parent_opid: None,
        content: Call(ProjectNeighbors(Vid(1), "Prime", Eid(2))),
      ),
      Opid(4): TraceOp(
        opid: Opid(4),
        parent_opid: None,
        content: Call(ProjectProperty(Vid(1), "Prime", "value")),
      ),
      Opid(5): TraceOp(
        opid: Opid(5),
        parent_opid: Some(Opid(4)),
        content: AdvanceInputIterator,
      ),
      Opid(6): TraceOp(
        opid: Opid(6),
        parent_opid: Some(Opid(3)),
        content: AdvanceInputIterator,
      ),
      Opid(7): TraceOp(
        opid: Opid(7),
        parent_opid: Some(Opid(2)),
        content: AdvanceInputIterator,
      ),
      Opid(8): TraceOp(
        opid: Opid(8),
        parent_opid: Some(Opid(1)),
        content: YieldFrom(GetStartingTokens(Prime(PrimeNumber(2)))),
      ),
      Opid(9): TraceOp(
        opid: Opid(9),
        parent_opid: Some(Opid(2)),
        content: YieldInto(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
        )),
      ),
      Opid(10): TraceOp(
        opid: Opid(10),
        parent_opid: Some(Opid(2)),
        content: YieldFrom(ProjectNeighborsOuter(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
        ))),
      ),
      Opid(11): TraceOp(
        opid: Opid(11),
        parent_opid: Some(Opid(10)),
        content: YieldFrom(ProjectNeighborsInner(0, Prime(PrimeNumber(3)))),
      ),
      Opid(12): TraceOp(
        opid: Opid(12),
        parent_opid: Some(Opid(10)),
        content: OutputIteratorExhausted,
      ),
      Opid(13): TraceOp(
        opid: Opid(13),
        parent_opid: Some(Opid(3)),
        content: YieldInto(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
          folded_contexts: {
            Eid(1): [
              SerializableContext(
                current_token: Some(Prime(PrimeNumber(3))),
                tokens: {
                  Vid(2): Some(Prime(PrimeNumber(3))),
                },
              ),
            ],
          },
          imported_tags: {
            FoldSpecificField(FoldSpecificField(
              fold_eid: Eid(1),
              fold_root_vid: Vid(2),
              kind: Count,
            )): Uint64(1),
          },
        )),
      ),
      Opid(14): TraceOp(
        opid: Opid(14),
        parent_opid: Some(Opid(3)),
        content: YieldFrom(ProjectNeighborsOuter(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
          folded_contexts: {
            Eid(1): [
              SerializableContext(
                current_token: Some(Prime(PrimeNumber(3))),
                tokens: {
                  Vid(2): Some(Prime(PrimeNumber(3))),
                },
              ),
            ],
          },
          imported_tags: {
            FoldSpecificField(FoldSpecificField(
              fold_eid: Eid(1),
              fold_root_vid: Vid(2),
              kind: Count,
            )): Uint64(1),
          },
        ))),
      ),
      Opid(15): TraceOp(
        opid: Opid(15),
        parent_opid: None,
        content: Call(ProjectProperty(Vid(3), "Number", "value")),
      ),
      Opid(16): TraceOp(
        opid: Opid(16),
        parent_opid: Some(Opid(15)),
        content: AdvanceInputIterator,
      ),
      Opid(17): TraceOp(
        opid: Opid(17),
        parent_opid: Some(Opid(14)),
        content: YieldFrom(ProjectNeighborsInner(0, Neither(NeitherNumber(1)))),
      ),
      Opid(18): TraceOp(
        opid: Opid(18),
        parent_opid: Some(Opid(15)),
        content: YieldInto(SerializableContext(
          current_token: Some(Neither(NeitherNumber(1))),
          tokens: {},
          imported_tags: {
            FoldSpecificField(FoldSpecificField(
              fold_eid: Eid(1),
              fold_root_vid: Vid(2),
              kind: Count,
            )): Uint64(1),
          },
        )),
      ),
      Opid(19): TraceOp(
        opid: Opid(19),
        parent_opid: Some(Opid(15)),
        content: YieldFrom(ProjectProperty(SerializableContext(
          current_token: Some(Neither(NeitherNumber(1))),
          tokens: {},
          imported_tags: {
            FoldSpecificField(FoldSpecificField(
              fold_eid: Eid(1),
              fold_root_vid: Vid(2),
              kind: Count,
            )): Uint64(1),
          },
        ), Int64(1))),
      ),
      Opid(20): TraceOp(
        opid: Opid(20),
        parent_opid: Some(Opid(15)),
        content: AdvanceInputIterator,
      ),
      Opid(21): TraceOp(
        opid: Opid(21),
        parent_opid: Some(Opid(14)),
        content: OutputIteratorExhausted,
      ),
      Opid(22): TraceOp(
        opid: Opid(22),
        parent_opid: Some(Opid(15)),
        content: InputIteratorExhausted,
      ),
      Opid(23): TraceOp(
        opid: Opid(23),
        parent_opid: Some(Opid(15)),
        content: OutputIteratorExhausted,
      ),
      Opid(24): TraceOp(
        opid: Opid(24),
        parent_opid: Some(Opid(4)),
        content: YieldInto(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
          folded_contexts: {
            Eid(1): [
              SerializableContext(
                current_token: Some(Prime(PrimeNumber(3))),
                tokens: {
                  Vid(2): Some(Prime(PrimeNumber(3))),
                },
              ),
            ],
            Eid(2): [
              SerializableContext(
                current_token: Some(Neither(NeitherNumber(1))),
                tokens: {
                  Vid(3): Some(Neither(NeitherNumber(1))),
                },
                imported_tags: {
                  FoldSpecificField(FoldSpecificField(
                    fold_eid: Eid(1),
                    fold_root_vid: Vid(2),
                    kind: Count,
                  )): Uint64(1),
                },
              ),
            ],
          },
        )),
      ),
      Opid(25): TraceOp(
        opid: Opid(25),
        parent_opid: Some(Opid(4)),
        content: YieldFrom(ProjectProperty(SerializableContext(
          current_token: Some(Prime(PrimeNumber(2))),
          tokens: {
            Vid(1): Some(Prime(PrimeNumber(2))),
          },
          folded_contexts: {
            Eid(1): [
              SerializableContext(
                current_token: Some(Prime(PrimeNumber(3))),
                tokens: {
                  Vid(2): Some(Prime(PrimeNumber(3))),
                },
              ),
            ],
            Eid(2): [
              SerializableContext(
                current_token: Some(Neither(NeitherNumber(1))),
                tokens: {
                  Vid(3): Some(Neither(NeitherNumber(1))),
                },
                imported_tags: {
                  FoldSpecificField(FoldSpecificField(
                    fold_eid: Eid(1),
                    fold_root_vid: Vid(2),
                    kind: Count,
                  )): Uint64(1),
                },
              ),
            ],
          },
        ), Int64(2))),
      ),
      Opid(26): TraceOp(
        opid: Opid(26),
        parent_opid: None,
        content: ProduceQueryResult({
          "value": Int64(2),
        }),
      ),
      Opid(27): TraceOp(
        opid: Opid(27),
        parent_opid: Some(Opid(4)),
        content: AdvanceInputIterator,
      ),
      Opid(28): TraceOp(
        opid: Opid(28),
        parent_opid: Some(Opid(3)),
        content: AdvanceInputIterator,
      ),
      Opid(29): TraceOp(
        opid: Opid(29),
        parent_opid: Some(Opid(2)),
        content: AdvanceInputIterator,
      ),
      Opid(30): TraceOp(
        opid: Opid(30),
        parent_opid: Some(Opid(1)),
        content: OutputIteratorExhausted,
      ),
      Opid(31): TraceOp(
        opid: Opid(31),
        parent_opid: Some(Opid(2)),
        content: InputIteratorExhausted,
      ),
      Opid(32): TraceOp(
        opid: Opid(32),
        parent_opid: Some(Opid(2)),
        content: OutputIteratorExhausted,
      ),
      Opid(33): TraceOp(
        opid: Opid(33),
        parent_opid: Some(Opid(3)),
        content: InputIteratorExhausted,
      ),
      Opid(34): TraceOp(
        opid: Opid(34),
        parent_opid: Some(Opid(3)),
        content: OutputIteratorExhausted,
      ),
      Opid(35): TraceOp(
        opid: Opid(35),
        parent_opid: Some(Opid(4)),
        content: InputIteratorExhausted,
      ),
      Opid(36): TraceOp(
        opid: Opid(36),
        parent_opid: Some(Opid(4)),
        content: OutputIteratorExhausted,
      ),
    },
    ir_query: IRQuery(
      root_name: "Two",
      root_component: IRQueryComponent(
        root: Vid(1),
        vertices: {
          Vid(1): IRVertex(
            vid: Vid(1),
            type_name: "Prime",
          ),
        },
        folds: {
          Eid(1): IRFold(
            eid: Eid(1),
            from_vid: Vid(1),
            to_vid: Vid(2),
            edge_name: "successor",
            component: IRQueryComponent(
              root: Vid(2),
              vertices: {
                Vid(2): IRVertex(
                  vid: Vid(2),
                  type_name: "Number",
                ),
              },
            ),
          ),
          Eid(2): IRFold(
            eid: Eid(2),
            from_vid: Vid(1),
            to_vid: Vid(3),
            edge_name: "predecessor",
            component: IRQueryComponent(
              root: Vid(3),
              vertices: {
                Vid(3): IRVertex(
                  vid: Vid(3),
                  type_name: "Number",
                  filters: [
                    Equals(LocalField(
                      field_name: "value",
                      field_type: "Int",
                    ), Tag(FoldSpecificField(FoldSpecificField(
                      fold_eid: Eid(1),
                      fold_root_vid: Vid(2),
                      kind: Count,
                    )))),
                  ],
                ),
              },
            ),
            imported_tags: [
              FoldSpecificField(FoldSpecificField(
                fold_eid: Eid(1),
                fold_root_vid: Vid(2),
                kind: Count,
              )),
            ],
          ),
        },
        outputs: {
          "value": ContextField(
            vertex_id: Vid(1),
            field_name: "value",
            field_type: "Int",
          ),
        },
      ),
    ),
  ),
  results: [
    {
      "value": Int64(2),
    },
  ],
)
