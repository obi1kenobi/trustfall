Ok(TestIRQuery(
  schema_name: "numbers",
  ir_query: IRQuery(
    root_name: "Number",
    root_parameters: Some(EdgeParameters({
      "max": Int64(6),
      "min": Int64(4),
    })),
    root_component: IRQueryComponent(
      root: Vid(1),
      vertices: {
        Vid(1): IRVertex(
          vid: Vid(1),
          type_name: "Composite",
          coerced_from_type: Some("Number"),
        ),
      },
      folds: {
        Eid(1): IRFold(
          eid: Eid(1),
          from_vid: Vid(1),
          to_vid: Vid(2),
          edge_name: "primeFactor",
          component: IRQueryComponent(
            root: Vid(2),
            vertices: {
              Vid(2): IRVertex(
                vid: Vid(2),
                type_name: "Prime",
              ),
            },
            outputs: {
              "factors": ContextField(
                vertex_id: Vid(2),
                field_name: "value",
                field_type: "Int",
              ),
            },
          ),
          post_filters: [
            Equals(Count, Variable(VariableRef(
              variable_name: "two",
              variable_type: "Int!",
            ))),
          ],
        ),
      },
      outputs: {
        "value": ContextField(
          vertex_id: Vid(1),
          field_name: "value",
          field_type: "Int",
        ),
      },
    ),
    variables: {
      "two": "Int!",
    },
  ),
  arguments: {
    "two": Uint64(2),
  },
))
