Ok(TestIRQuery(
  schema_name: "numbers",
  ir_query: IRQuery(
    root_name: "Number",
    root_parameters: Some(EdgeParameters({
      "max": Int64(10),
      "min": Int64(0),
    })),
    root_component: IRQueryComponent(
      root: Vid(1),
      vertices: {
        Vid(1): IRVertex(
          vid: Vid(1),
          type_name: "Number",
          filters: [
            HasSubstring(LocalField(
              field_name: "name",
              field_type: "String",
            ), Variable(VariableRef(
              variable_name: "substr",
              variable_type: "String!",
            ))),
            Equals(LocalField(
              field_name: "value",
              field_type: "Int",
            ), Variable(VariableRef(
              variable_name: "num",
              variable_type: "Int",
            ))),
            LessThan(LocalField(
              field_name: "value",
              field_type: "Int",
            ), Variable(VariableRef(
              variable_name: "max",
              variable_type: "Int!",
            ))),
          ],
        ),
      },
      outputs: {
        "value": ContextField(
          vertex_id: Vid(1),
          field_name: "value",
          field_type: "Int",
        ),
      },
    ),
    variables: {
      "max": "Int!",
      "num": "Int",
      "substr": "String!",
    },
  ),
  arguments: {
    "min": Int64(0),
    "num": String("four"),
    "substr": Int64(4),
  },
))
