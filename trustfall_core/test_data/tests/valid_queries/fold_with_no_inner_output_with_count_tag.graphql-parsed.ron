Ok(TestParsedGraphQLQuery(
  schema_name: "numbers",
  query: Query(
    root_connection: FieldConnection(
      position: Pos(
        line: 3,
        column: 5,
      ),
      name: "Number",
      arguments: {
        "max": Int64(30),
        "min": Int64(30),
      },
    ),
    root_field: FieldNode(
      position: Pos(
        line: 3,
        column: 5,
      ),
      name: "Number",
      coerced_to: Some("Composite"),
      connections: [
        (FieldConnection(
          position: Pos(
            line: 5,
            column: 13,
          ),
          name: "value",
          alias: Some("composite_value"),
        ), FieldNode(
          position: Pos(
            line: 5,
            column: 13,
          ),
          name: "value",
          alias: Some("composite_value"),
          output: [
            OutputDirective(),
          ],
        )),
        (FieldConnection(
          position: Pos(
            line: 7,
            column: 13,
          ),
          name: "primeFactor",
          fold: Some(FoldGroup(
            fold: FoldDirective(),
            transform: Some(TransformGroup(
              transform: TransformDirective(
                kind: Count,
              ),
              tag: [
                TagDirective(
                  name: Some("primes"),
                ),
              ],
              filter: [
                FilterDirective(
                  operation: GreaterThanOrEqual((), VariableRef("min_primes")),
                ),
              ],
            )),
          )),
        ), FieldNode(
          position: Pos(
            line: 7,
            column: 13,
          ),
          name: "primeFactor",
          transform_group: Some(TransformGroup(
            transform: TransformDirective(
              kind: Count,
            ),
            tag: [
              TagDirective(
                name: Some("primes"),
              ),
            ],
            filter: [
              FilterDirective(
                operation: GreaterThanOrEqual((), VariableRef("min_primes")),
              ),
            ],
          )),
        )),
        (FieldConnection(
          position: Pos(
            line: 9,
            column: 13,
          ),
          name: "divisor",
        ), FieldNode(
          position: Pos(
            line: 9,
            column: 13,
          ),
          name: "divisor",
          connections: [
            (FieldConnection(
              position: Pos(
                line: 10,
                column: 17,
              ),
              name: "value",
              alias: Some("prime_factors"),
            ), FieldNode(
              position: Pos(
                line: 10,
                column: 17,
              ),
              name: "value",
              alias: Some("prime_factors"),
              filter: [
                FilterDirective(
                  operation: Equals((), TagRef("primes")),
                ),
              ],
              output: [
                OutputDirective(),
              ],
            )),
          ],
        )),
      ],
    ),
  ),
  arguments: {
    "min_primes": Uint64(2),
  },
))
