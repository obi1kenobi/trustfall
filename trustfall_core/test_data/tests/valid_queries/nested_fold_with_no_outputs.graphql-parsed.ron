Ok(TestParsedGraphQLQuery(
  schema_name: "numbers",
  query: Query(
    root_connection: FieldConnection(
      position: Pos(
        line: 3,
        column: 5,
      ),
      name: "Number",
      arguments: {
        "max": Int64(64),
        "min": Int64(64),
      },
    ),
    root_field: FieldNode(
      position: Pos(
        line: 3,
        column: 5,
      ),
      name: "Number",
      coerced_to: Some("Composite"),
      connections: [
        (FieldConnection(
          position: Pos(
            line: 5,
            column: 13,
          ),
          name: "value",
        ), FieldNode(
          position: Pos(
            line: 5,
            column: 13,
          ),
          name: "value",
          output: [
            OutputDirective(),
          ],
        )),
        (FieldConnection(
          position: Pos(
            line: 7,
            column: 13,
          ),
          name: "divisor",
          fold: Some(FoldGroup(
            fold: FoldDirective(),
            transform: Some(TransformGroup(
              tid: Tid(1),
              transform: TransformDirective(
                kind: Count,
              ),
              filter: [
                FilterDirective(
                  operation: GreaterThanOrEqual((), VariableRef("two")),
                ),
              ],
            )),
          )),
        ), FieldNode(
          position: Pos(
            line: 7,
            column: 13,
          ),
          name: "divisor",
          coerced_to: Some("Composite"),
          connections: [
            (FieldConnection(
              position: Pos(
                line: 9,
                column: 21,
              ),
              name: "divisor",
              fold: Some(FoldGroup(
                fold: FoldDirective(),
                transform: Some(TransformGroup(
                  tid: Tid(2),
                  transform: TransformDirective(
                    kind: Count,
                  ),
                  filter: [
                    FilterDirective(
                      operation: GreaterThanOrEqual((), VariableRef("two")),
                    ),
                  ],
                )),
              )),
            ), FieldNode(
              position: Pos(
                line: 9,
                column: 21,
              ),
              name: "divisor",
            )),
          ],
        )),
      ],
    ),
  ),
  arguments: {
    "two": Uint64(2),
  },
))
