TestGraphQLQuery (
    schema_name: "numbers",
    // This @fold statement needs to evaluate because the @tag forces us to observe the
    // full iterator in order to calculate length.
    //
    // The number 30 is composite and has 3 prime factors: 2, 3, 5.
    // This test ensures that we don't incorrectly stop the evaluation of the @fold
    // early, after producing only two of those primes thereby satisfying the predicate.
    //
    // The `__typename` inside the @fold doesn't do anything.
    // It's used to make the `{}` block valid, since empty blocks aren't legal GraphQL.
    query: r#"
{
    Number(min: 30, max: 30) {
        ... on Composite {
            composite_value: value @output

            primeFactor @fold @transform(op: "count") @filter(op: ">=", value: ["$min_primes"]) @tag(name: "number_of_prime_factors") {
                __typename
            }

            divisor {
                divisor_that_is_equal_to_number_of_prime_factors: value @filter(op: "=", value: ["%number_of_prime_factors"]) @output
            }
        }
    }
}"#,
    arguments: {
        "min_primes": Uint64(2)
    },
)
