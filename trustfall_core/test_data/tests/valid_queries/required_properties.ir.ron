Ok(TestIRQuery(
  schema_name: "numbers",
  ir_query: IRQuery(
    root_name: "Number",
    root_parameters: EdgeParameters(
      contents: {
        "max": Int64(2),
        "min": Int64(1),
      },
    ),
    root_component: IRQueryComponent(
      root: Vid(1),
      vertices: {
        Vid(1): IRVertex(
          vid: Vid(1),
          type_name: "Number",
          filters: [
            Equals(LocalField(
              field_name: "__typename",
              field_type: "String!",
            ), Variable(VariableRef(
              variable_name: "type",
              variable_type: "String!",
            ))),
          ],
        ),
        Vid(3): IRVertex(
          vid: Vid(3),
          type_name: "Composite",
          filters: [
            Equals(LocalField(
              field_name: "name",
              field_type: "String",
            ), Tag(ContextField(ContextField(
              vertex_id: Vid(1),
              field_name: "name",
              field_type: "String",
            )))),
          ],
        ),
      },
      edges: {
        Eid(2): IREdge(
          eid: Eid(2),
          from_vid: Vid(1),
          to_vid: Vid(3),
          edge_name: "multiple",
          parameters: EdgeParameters(
            contents: {
              "max": Int64(5),
            },
          ),
        ),
      },
      folds: {
        Eid(1): IRFold(
          eid: Eid(1),
          from_vid: Vid(1),
          to_vid: Vid(2),
          edge_name: "predecessor",
          component: IRQueryComponent(
            root: Vid(2),
            vertices: {
              Vid(2): IRVertex(
                vid: Vid(2),
                type_name: "Number",
              ),
            },
            outputs: {
              "name": ContextField(
                vertex_id: Vid(2),
                field_name: "name",
                field_type: "String",
              ),
            },
          ),
        ),
      },
      outputs: {
        "value": ContextField(
          vertex_id: Vid(1),
          field_name: "value",
          field_type: "Int",
        ),
      },
    ),
    variables: {
      "type": "String!",
    },
  ),
  arguments: {
    "type": String("Prime"),
  },
))
